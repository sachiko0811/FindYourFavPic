{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/Logo.js","components/ImageCard.js","components/ImageList.js","components/Bottom.js","components/App.js","index.js","images/logo.svg"],"names":["axios","create","baseURL","headers","Authorization","SearchAll","styled","div","Flex","Input","input","ButtonOne","button","ButtonTwo","SearchBar","props","onSubmit","e","preventDefault","term","className","type","value","onChange","setTerm","target","placeholder","onShowCanada","text","Test","onClick","Logo","Size","img","src","logo","window","location","reload","ImageCard","useState","spans","setSpans","imageRef","useRef","useEffect","current","addEventListener","setSpan","height","clientHeight","Math","ceil","image","description","urls","style","gridRowEnd","ref","alt","regular","ImageLists","ImageList","images","map","length","key","id","marginBottom","BottomStyle","Bottom","console","log","color","page","pageSize","defaultCurrent","total","All","App","setImages","onSearchSubmit","a","unsplash","get","params","query","response","updateImages","data","results","canadaImages","paddingTop","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.e45203aa.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID KAAsvFr439mUJAXpPSEe4DOgGGdh98x5uWJWdGv9v7Q'\n    }\n})","import React from 'react'\nimport styled from 'styled-components'\n\n// import logo from '../images/logo.svg'\n\nconst SearchAll = styled.div`\n    background: #fff;\n    border-radius: 10px;\n    // width: 60%;\n    padding: 10px 10px 0px;\n    margin-top: 50px;\n    margin-bottom: 50px;\n`\n\nconst Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    i {\n        padding: 10px;\n        font-size: 28px;\n    }\n    `\n\nconst Input = styled.input`\n    width: 500px;\n    background: #e6e6e6;\n    border-radius: 50px;\n    padding: 10px 20px;\n    margin: 10px 30px 10px 0px;\n    border: none;\n    outline: none;\n`\n\nconst ButtonOne = styled.button`\n    background: #078080;\n    border-radius: 10px;\n    padding: 10px 20px;\n    margin: 10px 20px;\n    border: none;\n    outline: none;\n`\n\nconst ButtonTwo = styled.button`\n    background: #f45d48;\n    border-radius: 10px;\n    padding: 10px 20px;\n    margin: 10px 20px;\n    border: none;\n    outline: none;\n`\n\n const SearchBar = (props) => {\n\n    // const [term, setTerm] = useState('vancouver');\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        // const updatedTerm = e.target.value;\n        // setTerm(updatedTerm)\n\n        props.onSubmit(props.term);\n        // console.log(\"onFormSubmit\")\n    }\n\n    // console.log(props)\n\n\n    return(\n        <SearchAll \n        // className=\"ui segment\"\n        >\n            <Flex>\n                 <form onSubmit={onFormSubmit} \n                //  className=\"ui form\"\n                 >  {/* should be onSubmit(property)*/}\n                     <div \n                    //  className=\"field\"\n                     >\n                \n                         {/* <label>Image Search</label> */}\n                         {/* <Flex> */}\n                         {/* <img src={logo}></img> */}\n                         <i className=\"fa fa-search\"></i>\n                     <Input \n                     type=\"text\" \n                     value={props.term} \n                     onChange={(e) => props.setTerm( e.target.value)}\n                     placeholder=\"Find Your Favorite Picture\"\n                     /> \n                     \n                     {/* </Flex> */}\n                     </div>\n                 </form>\n                 {/* <Flex> */}\n                 <Test \n                 onSubmit={props.onSubmit}\n                 onShowCanada={props.onShowCanada} \n                 text={props.term}/>\n                 </Flex>\n             </SearchAll>\n    )\n}\n\nexport default SearchBar\n\nconst Test = (props) => {\n\n    // console.log(props)\n\n\n   const onClick = () => {\n       props.onSubmit(props.text)\n}\n\n    const onShowCanada = () => {\n        // props.onSubmit(props.onShowCanada)\n        props.onShowCanada(\"canada\")\n        // console.log(props.onShowCanada)\n    }\n\n    return (\n        <div>\n            <ButtonOne onClick={onClick}>Search</ButtonOne>\n            <ButtonTwo onClick={onShowCanada}>Canada</ButtonTwo>\n        </div>\n    )\n}","import React from 'react'\n\nimport styled from 'styled-components'\nimport logo from '../images/logo.svg'\n\nconst Logo = () => {\n\n    const Size = styled.img`\n    width: 150px;\n    height: 80px;\n    margin: 50px;\n    `\n\n    const onClick = () => {\n        \n            window.location.reload()\n    }\n  \n\n    return(\n        <>\n        <Size src={logo} onClick={onClick}/>\n        </>\n    )\n}\n\nexport default Logo","import React, { useState, useEffect, useRef } from 'react'\n\nconst ImageCard = (props) => {\n    const [spans, setSpans] = useState(0);\n    const imageRef = useRef(null);\n\n    useEffect(() => {\n        imageRef.current.addEventListener('load', setSpan)\n    }, [])\n\n    const setSpan = () => {\n        const height = imageRef.current.clientHeight\n        const spans = Math.ceil(height / 10)\n        setSpans(spans)\n    }\n    \n    const {description, urls} = props.image;\n\n    return(\n        <div \n        style={{gridRowEnd: `span ${spans}`}}\n        >\n            <img\n            ref={imageRef}\n            alt={description}\n            src={urls.regular} \n            />\n        </div>\n    )\n}\n\nexport default ImageCard","\nimport React from 'react'\n\nimport ImageCard from './ImageCard'\n// import Bottom from './Bottom'\n\nimport styled from 'styled-components'\n\n    const ImageLists = styled.div`\n        // display: flex;\n        // flex-wrap: wrap;\n        // flex-direction: row;\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n        grid-gap: 10px;\n        // grid-auto-rows: 5px;\n        img {\n            width: 250px;\n            margin: 10px;\n            // object-fit: contain;\n            // grid-row-end: span 2;\n        }\n    `;\n\n\n\n\nconst ImageList = (props) => {\n    // console.log(props.images)\n\n    const images = props.images.map((image) => {\n\n        const imagesLength = props.images.length;\n\n        if(imagesLength > 10) {\n            // for(let i=0; i < 10; i++) {\n                // console.log(images)\n                return(\n                    // console.log(images)\n                    <ImageCard \n                    key={image.id}\n                    image={image}\n                    />\n                )\n            // }\n    } else {\n        return (\n            <ImageCard\n            key={image.id}\n            image={image} />\n        )\n    }\n    })\n\nreturn( <>\n    <ImageLists style={{ marginBottom: '100px'}}>\n    {images}\n    </ImageLists>\n    </>\n)\n}\n\nexport default ImageList\n","import React from 'react';\n\nimport 'antd/dist/antd.css';\nimport { Pagination } from 'antd';\n\nimport ImageList from './ImageList';\n\nimport styled from 'styled-components';\n\nconst BottomStyle = styled.div`\n    text-align: center;\n    padding-top: 50px;\n`\n\nconst Bottom = (props) => {\n    console.log(props.images.length)\n\n    const onChange = (page, pageSize) => {\n        props.onSubmit(props.term, page)\n        props.onShowCanada(props.term, page)\n        console.log(page, pageSize)\n    }\n\n    return(\n        <>\n            <BottomStyle>\n            <ImageList \n            images={props.images}\n            />\n            <Pagination\n            style={{color: '#fff'}}\n            onChange={onChange} \n            defaultCurrent={1} \n            total={100} \n            />\n            </BottomStyle>\n        </>\n    )\n    \n}\n\nexport default Bottom","import React, { useState } from 'react'\nimport unsplash from '../api/unsplash'\nimport SearchBar from './SearchBar'\n// import ImageList from './ImageList'\nimport Logo from './Logo'\nimport Bottom from './Bottom'\n\nimport styled from 'styled-components'\n\n\nconst All = styled.div`\n    background: #f8f5f2;\n    padding: 10vh 5vw;\n`\n\nconst Flex = styled.div`\n    display: flex;\n    `\n\nconst App = () => {\n\n    const [images, setImages] = useState([])\n    const [term, setTerm] = useState('');\n\n\n    const onSearchSubmit = async (text, page=0) => {\n        console.log(text)\n        const response = await unsplash\n          .get('/search/photos', {  // make a req\n            params: { \n                query: text,\n                page: page,\n                // per_page: 100,\n                // color: \"red\",\n            }\n            \n        })\n\n        const updateImages = response.data.results\n        setImages(updateImages) \n    }\n\n    \n\n    const onShowCanada = async (term, page=0) => {\n        console.log(term)\n        const response = await unsplash\n            .get('/search/photos', {  // make a req\n            params: { \n                query: term,\n                page: page,\n             }\n            \n        })\n\n        const canadaImages = response.data.results\n        setImages(canadaImages)\n        }\n\n\n    return(\n        <All \n        // className=\"ui container\"\n        style={{ paddingTop: '20px' }}\n        >\n            <Flex>\n            <Logo />\n            <SearchBar \n            onSubmit={onSearchSubmit}\n            setTerm={setTerm}\n            term={term}\n            onShowCanada={onShowCanada}\n            />\n            </Flex>\n            {/* Found: {images.length} */}\n\n            {/* <ImageList images={images} /> */}\n            <Bottom images={images} onSubmit={onSearchSubmit} onShowCanada={onShowCanada} term={term}/>\n        </All>\n    )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/logo.e14d611e.svg\";"],"sourceRoot":""}